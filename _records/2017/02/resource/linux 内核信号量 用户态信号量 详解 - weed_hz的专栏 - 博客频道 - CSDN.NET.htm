
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
     
    <html xmlns="http://www.w3.org/1999/xhtml">
    
<head>  

    <script type="text/javascript" src="http://c.csdnimg.cn/pubfooter/js/tracking.js" charset="utf-8"></script>  

    <script type="text/javascript">
        var protocol = window.location.protocol;
        document.write('<script type="text/javascript" src="' + protocol + '//csdnimg.cn/pubfooter/js/repoAddr2.js?v=' + Math.random() + '"></' + 'script>');
    </script>

  
 <meta http-equiv="Cache-Control" content="no-siteapp" /><link rel="alternate" media="handheld" href="#" />

    <title>linux 内核信号量 用户态信号量 详解 - weed_hz的专栏
        - 博客频道 - CSDN.NET</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="description" content="方法一：结合php解决错乱问题，给选择项加入class删除class解决  情况：页面中纯在两个相同的子集和相同的父级元素$(function(){            //删除订单功能            $(&#39;.ftTr_delA&#39;).live(&#39;click&#39;,function(){                //获取roid                var orid" />
    <script src="http://static.blog.csdn.net/scripts/jquery.js" type="text/javascript"></script>
      <script type="text/javascript" src="http://static.blog.csdn.net/scripts/jquery-version.js"></script>
    <script type="text/javascript" src="http://static.blog.csdn.net/scripts/ad.js?v=1.1"></script>
        <!--new top-->
               <link rel="stylesheet" href="http://c.csdnimg.cn/public/common/toolbar/css/index.css">        <!--new top-->
    
      <!-- ad begin -->
         <script language="javascript" type="text/javascript" src="http://ads.csdn.net/js/tracking.js"></script>
    <!-- ad end-->

    <link rel="Stylesheet" type="text/css" href="http://static.blog.csdn.net/skin/skin-yellow/css/style.css?v=1.1" />
    <link id="RSSLink" title="RSS" type="application/rss+xml" rel="alternate" href="/weed_hz/rss/list" />
    <link rel="shortcut icon" href="http://c.csdnimg.cn/public/favicon.ico" />
    <link type="text/css" rel="stylesheet" href="http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/nobg.css" />
 


<script>
    var _hmt = _hmt || [];
    (function () {
        var hm = document.createElement("script");
        hm.src = "//hm.baidu.com/hm.js?6bcd52f51e9b3dce32bec4a3997715ac";
        var s = document.getElementsByTagName("script")[0];
        s.parentNode.insertBefore(hm, s);
    })();
</script>

</head>
<body>


    <!-- 广告位开始 -->
        <ins data-revive-zoneid="149" data-revive-id="8c38e720de1c90a6f6ff52f3f89c4d57"></ins>
    <!-- 广告位结束 -->

    
   
      <!--new top-->
    <script id="toolbar-tpl-scriptId" fixed="true" prod="blog" skin="black" src="http://c.csdnimg.cn/public/common/toolbar/js/html.js" type="text/javascript"></script>
     <!--new top-->
    <div id="container">
        <div id="header">
    <div class="header">
        <div id="blog_title">
            <h2>
                <a href="http://blog.csdn.net/weed_hz">weed_hz的专栏</a></h2>
            <h3></h3>
            <div class="clear">
            </div>
        </div>
        <div class="clear">
        </div>
        
     
    </div>
</div>
<div id="navigator">
    <div class="navigator_bg">
    </div>
    <div class="navigator">
        <ul>           
                <li id="btnContents"><a href="http://blog.csdn.net/weed_hz?viewmode=contents"><span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_mulu'])">
                    <img src="http://static.blog.csdn.net/images/ico_list.gif">目录视图</span></a></li>
                <li id="btnView"><a href="http://blog.csdn.net/weed_hz?viewmode=list"><span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_zhaiyao'])">
                    <img src="http://static.blog.csdn.net/images/ico_summary.gif">摘要视图</span></a></li>
                <li id="btnRss"><a href="http://blog.csdn.net/weed_hz/rss/list"><span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_RSS'])">
                    <img src="http://static.blog.csdn.net/images/ico_rss.gif">订阅</span></a></li>                
            

            </ul>
    </div>
</div>
<script type="text/javascript">
    var username = "weed_hz";
    var _blogger = username;
    var blog_address = "http://blog.csdn.net/weed_hz";
    var static_host = "http://static.blog.csdn.net";
    var currentUserName = "yonka";  
</script>

        <div id="body">
            <div id="main">
                <div class="main">
                        <div class="ad_class">
<div class="notice tracking-ad" data-mod='popu_3' > 


<a href="http://bss.csdn.net/m/topic/edu_exam
">
<font color=blue>2017直通软考，拿证无忧


</font></a>

&nbsp;&nbsp;&nbsp;&nbsp

<a href="http://edu.csdn.net/huiyiCourse/detail/274
">
<font color=red>程序员简历优化指南！ 
</font></a>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://blog.csdn.net/turingbooks/article/details/54582158">
<font color=blue>程序员1月书讯
</font></a>

&nbsp;&nbsp;&nbsp;

<a href="http://bss.csdn.net/m/product/aliyun_essay/index
">
<font color=red>云端应用征文大赛，秀绝招，赢无人机！
</font></a>


</div>                        </div>
                        



  
<link href="http://static.blog.csdn.net/css/comment1.css" type="text/css" rel="stylesheet" />
<link href="http://static.blog.csdn.net/css/style1.css" type="text/css" rel="stylesheet" />
<script language='JavaScript' type='text/javascript' src='http://download.csdn.net/js/jquery.cookie.js'></script>
<script type="text/javascript" src="http://c.csdnimg.cn/rabbit/search-service/main.js"></script>
<link rel="stylesheet" href="http://static.blog.csdn.net/public/res-min/markdown_views.css?v=1.0" />
<link rel="stylesheet" href="http://static.blog.csdn.net/css/category.css?v=1.0" />
<script type="text/javascript" src="http://static.blog.csdn.net/public/res/bower-libs/MathJax/MathJax.js?config=TeX-AMS_HTML"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/web-storage-cache.min.js"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/replace.min.js"></script>




  <script type="text/ecmascript">
      window.quickReplyflag = true;
           
            var isBole = false;
            
      
      var fasrc="http://my.csdn.net/my/favorite/miniadd?t=linux+%e5%86%85%e6%a0%b8%e4%bf%a1%e5%8f%b7%e9%87%8f+%e7%94%a8%e6%88%b7%e6%80%81%e4%bf%a1%e5%8f%b7%e9%87%8f+%e8%af%a6%e8%a7%a3&u=http://blog.csdn.net/weed_hz/article/details/8965733"

    </script>
<div id="article_details" class="details">
    <div class="article_title">   
         <span class="ico ico_type_Original"></span>


    <h1>
        <span class="link_title"><a href="/weed_hz/article/details/8965733">
        linux 内核信号量 用户态信号量 详解            
        </a></span>
    </h1>
</div>

   

        <div class="article_manage clearfix">
        <div class="article_r">
            <span class="link_postdate">2013-05-23 16:44</span>
            <span class="link_view" title="阅读次数">5243人阅读</span>
            <span class="link_comments" title="评论次数"> <a href="#comments" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_pinglun'])">评论</a>(0)</span>
            <span class="link_collect tracking-ad" data-mod="popu_171"> <a href="javascript:void(0);" onclick="javascript:collectArticle('linux+%e5%86%85%e6%a0%b8%e4%bf%a1%e5%8f%b7%e9%87%8f+%e7%94%a8%e6%88%b7%e6%80%81%e4%bf%a1%e5%8f%b7%e9%87%8f+%e8%af%a6%e8%a7%a3','8965733');return false;" title="收藏">收藏</a></span>
             <span class="link_report"> <a href="#report" onclick="javascript:report(8965733,2);return false;" title="举报">举报</a></span>

        </div>
    </div>
    <div class="embody"  style="display:none" id="embody">
        <span class="embody_t">本文章已收录于：</span>
        <div class="embody_c" id="lib" value="{&quot;err&quot;:0,&quot;msg&quot;:&quot;ok&quot;,&quot;data&quot;:[{&quot;name&quot;:&quot;操作系统知识库&quot;,&quot;url&quot;:&quot;http://lib.csdn.net/base/42?source=blogtop&quot;,&quot;logo&quot;:&quot;http://img.knowledge.csdn.net/upload/base/1464938192555_555.jpg&quot;}]}"></div>
    </div>
    <style type="text/css">        
            .embody{
                padding:10px 10px 10px;
                margin:0 -20px;
                border-bottom:solid 1px #ededed;                
            }
            .embody_b{
                margin:0 ;
                padding:10px 0;
            }
            .embody .embody_t,.embody .embody_c{
                display: inline-block;
                margin-right:10px;
            }
            .embody_t{
                font-size: 12px;
                color:#999;
            }
            .embody_c{
                font-size: 12px;
            }
            .embody_c img,.embody_c em{
                display: inline-block;
                vertical-align: middle;               
            }
             .embody_c img{               
                width:30px;
                height:30px;
            }
            .embody_c em{
                margin: 0 20px 0 10px;
                color:#333;
                font-style: normal;
            }
    </style>
    <script  type="text/javascript">
        $(function () {
            try
            {
                var lib = eval("("+$("#lib").attr("value")+")");
                var html = "";
                if (lib.err == 0) {
                    $.each(lib.data, function (i) {
                        var obj = lib.data[i];
                        //html += '<img src="' + obj.logo + '"/>' + obj.name + "&nbsp;&nbsp;";
                        html += ' <a href="' + obj.url + '" target="_blank">';
                        html += ' <img src="' + obj.logo + '">';
                        html += ' <em><b>' + obj.name + '</b></em>';
                        html += ' </a>';
                    });
                    if (html != "") {
                        setTimeout(function () {
                            $("#lib").html(html);                      
                            $("#embody").show();
                        }, 100);
                    }
                }      
            } catch (err)
            { }
            
        });
    </script>
      <div class="category clearfix">
        <div class="category_l">
           <img src="http://static.blog.csdn.net/images/category_icon.jpg">
            <span>分类：</span>
        </div>
        <div class="category_r">
                    <label  onclick="GetCategoryArticles('1422895','weed_hz','top','8965733');">
                        <span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_fenlei']);">linux_kernel<em>（72）</em></span>
                      <img class="arrow-down" src="http://static.blog.csdn.net/images/arrow_triangle _down.jpg" style="display:inline;">
                      <img class="arrow-up" src="http://static.blog.csdn.net/images/arrow_triangle_up.jpg" style="display:none;">
                        <div class="subItem">
                            <div class="subItem_t"><a  href="http://blog.csdn.net/weed_hz/article/category/1422895"  target="_blank">作者同类文章</a><i class="J_close">X</i></div>
                            <ul class="subItem_l" id="top_1422895">                            
                            </ul>
                        </div>
                    </label>                    
                    <label  onclick="GetCategoryArticles('1422919','weed_hz','top','8965733');">
                        <span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_fenlei']);">linux_application<em>（38）</em></span>
                      <img class="arrow-down" src="http://static.blog.csdn.net/images/arrow_triangle _down.jpg" style="display:inline;">
                      <img class="arrow-up" src="http://static.blog.csdn.net/images/arrow_triangle_up.jpg" style="display:none;">
                        <div class="subItem">
                            <div class="subItem_t"><a  href="http://blog.csdn.net/weed_hz/article/category/1422919"  target="_blank">作者同类文章</a><i class="J_close">X</i></div>
                            <ul class="subItem_l" id="top_1422919">                            
                            </ul>
                        </div>
                    </label>                    
        </div>
    </div>
    <script   type="text/javascript" src="http://static.blog.csdn.net/scripts/category.js"></script>  
        <div   class="bog_copyright">         
            <p  class="copyright_p" >版权声明：本文为博主原创文章，未经博主允许不得转载。</p>
        </div>

  

  
  
     

<div id="article_content" class="article_content">

<p>Linux &nbsp;内核中的信号量使用和用户态的信号量使用有所不同，<br>
1、内核信号量，由内核控制路径使用。<br>
2、用户态信号量分为两种，一种为POSIX,另一种为 SYSTEM V<br>
内核中信号量的构成以及使用：<br>
<strong>内核信号量的构成</strong><br>
内核信号量类&#20284;于自旋锁，因为当锁关闭着时，它不允许内核控制路径继续进行。然而，当内核控制路径试图获取内核信号量锁保护的忙资源时，相应的进程就被挂起。只有在资源被释放时，进程才再次变为可运行。<br>
只有可以睡眠的函数才能获取内核信号量；中断处理程序和可延迟函数都不能使用内核信号量。<br>
内核信号量是struct semaphore类型的对象，它在&lt;asm/semaphore.h&gt;中定义<br>
struct semaphore {<br>
　　 atomic_t count;<br>
　　 int sleepers;<br>
　　 wait_queue_head_t wait;<br>
　　}<br>
count：相当于信号量的&#20540;，大于0，资源空闲；等于0，资源忙，但没有进程等待这个保护的资源；小于0，资源不可用，并至少有一个进程等待资源。<br>
wait：存放等待队列链表的地址，当前等待资源的所有睡眠进程都会放在这个链表中。<br>
sleepers：存放一个标志，表示是否有一些进程在信号量上睡眠<br>
<strong>内核信号量中的等待队列（删除，没有联系）</strong><br>
上面已经提到了内核信号量使用了等待队列wait_queue来实现阻塞操作。当某任务由于没有某种条件没有得到满足时，它就被挂到等待队列中睡眠。当条件得到满足时，该任务就被移出等待队列，此时并不意味着该任务就被马上执行，因为它又被移进工作队列中等待CPU资源，在适当的时机被调度。 内核信号量是在内部使用等待队列的，也就是说该等待队列对用户是隐藏的，无须用户干涉<br>
<strong>内核信号量的相关函数</strong><br>
初始化：<br>
void sema_init (struct semaphore *sem, int val);<br>
void init_MUTEX (struct semaphore *sem); //将sem的&#20540;置为1，表示资源空闲<br>
void init_MUTEX_LOCKED (struct semaphore *sem); //将sem的&#20540;置为0，表示资源忙<br>
<strong>申请内核信号量所保护的资源：</strong><br>
void down(struct semaphore * sem); // 可引起睡眠<br>
int down_interruptible(struct semaphore * sem); // down_interruptible能被信号打断<br>
int down_trylock(struct semaphore * sem); // 非阻塞函数，不会睡眠。无法锁定资源则马上返回<br>
<strong>释放内核信号量所保护的资源：</strong><br>
void up(struct semaphore * sem);<br>
<strong>内核信号量的使用例程</strong><br>
在驱动程序中，当多个线程同时访问相同的资源时（驱动中的全局变量时一种典型的共享资源），可能会引发“竞态“，因此我们必须对共享资源进行并发控制。Linux内核中解决并发控制的最常用方法是自旋锁与信号量（绝大多数时候作为互斥锁使用）。<br>
</p>
<pre name="code" class="html">static ssize_t globarl_var(struct file *file, const char __user *ubuf,
	size_t count,loff_t *offp)
{
//试图获得信号量，用可被信号打断方式
		if(down_interruptible(&amp;sema) &lt; 0){
			return -ERESTARTSYS;
		}
//对共享资源(global_var)进行操作
		if(copy_from_user(&amp;global_var, buf, sizeof(int))){
//失败也要进行释放信号量，要不死锁了
			up(&amp;sema);
			return -EFAULT;
		}
//成功释放信号量	
		up(&amp;sema);
		
		return sizeof(int);
}</pre>用户态信号量使用：<br>
POSIX 信号量与SYSTEM V信号量的比<br>
1.对POSIX来说，信号量是个非负整数。常用于线程间同步。而SYSTEM V信号量则是一个或多个信号量的集合，它对应的是一个信号量结构体，这个结构体是为SYSTEM V IPC服务的，信号量只不过是它的一部分。常用于进程间同步。<br>
2．POSIX信号量的引用头文件是“&lt;semaphore.h&gt;”，而SYSTEM V信号量的引用头文件是“&lt;sys/sem.h&gt;”。<br>
3．从使用的角度，System V信号量是复杂的，而Posix信号量是简单。比如，POSIX信号量的创建和初始化或PV操作就很非常方便。<br>
POSIX信号量详解<br>
<strong>1．无名信号量</strong><br>
&nbsp; &nbsp; 无名信号量的创建就像声明一般的变量一样简单，例如：sem_t &nbsp;sem_id。然后再初始化该无名信号量，之后就可以放心使用了。<br>
&nbsp; &nbsp; 无名信号量常用于多线程间的同步，同时也用于相关进程间的同步。也就是说，无名信号量必须是多个进程（线程）的共享变量，无名信号量要保护的变量也必须是多个进程（线程）的共享变量，这两个条件是缺一不可的。<br>
<p>&nbsp; &nbsp; 常见的无名信号量相关函数：sem_destroy</p>
<p><br>
</p>
&nbsp; &nbsp; int sem_init(sem_t *sem, int<span style="color:#cc0000"> pshared</span>, unsigned int value);<br>
&nbsp; &nbsp; <span style="color:#cc0000">1) pshared ==0 用于同一多线程的同步；</span><br>
&nbsp; &nbsp; <span style="color:#cc0000">2)若pshared&gt;0 用于多个相关进程间的同步（即由fork产生的）</span><br>
<br>
&nbsp; &nbsp; int sem_getvalue(sem_t *sem, int *sval);<br>
&nbsp; &nbsp; 取回信号量sem的当前&#20540;，把该&#20540;保存到sval中。<br>
&nbsp; &nbsp; 若有1个或更多的线程或进程调用sem_wait阻塞在该信号量上，该函数返回两种&#20540;：<br>
&nbsp; &nbsp; &nbsp;1) 返回0<br>
&nbsp; &nbsp; &nbsp;2) 返回阻塞在该信号量上的进程或线程数目<br>
&nbsp; &nbsp; &nbsp;linux采用返回的第一种策略。
<p></p>
<p><br>
&nbsp; &nbsp; sem_wait(或sem_trywait)相当于P操作，即申请资源。<br>
&nbsp; &nbsp; int sem_wait(sem_t *sem); &nbsp; &nbsp; // 这是一个阻塞的函数 &nbsp; &nbsp;<br>
&nbsp; &nbsp; 测试所指定信号量的&#20540;,它的操作是原子的,<br>
&nbsp; &nbsp; 若sem&gt;0，那么它减1并立即返回。<br>
&nbsp; &nbsp; 若sem==0，则睡眠直到sem&gt;0，此时立即减1，然后返回。<br>
&nbsp; &nbsp; int sem_trywait(sem_t *sem); &nbsp; // 非阻塞的函数<br>
&nbsp; &nbsp; 其他的行为和sem_wait一样，除了：<br>
&nbsp; &nbsp; 若sem==0，不是睡眠，而是返回一个错误EAGAIN。&nbsp;<br>
&nbsp; &nbsp; sem_post相当于V操作，释放资源。</p>
<p><br>
&nbsp; &nbsp; int sem_post(sem_t *sem);<br>
&nbsp; &nbsp; 把指定的信号量sem的&#20540;加1;<br>
&nbsp; &nbsp; 呼醒正在等待该信号量的任意线程。&nbsp;<br>
&nbsp; &nbsp; 注意：在这些函数中，只有sem_post是信号安全的函数，它是可重入函数</p>
<p><br>
<strong>（a）无名信号量在多线程间的同步</strong><br>
无名信号量的常见用法是将要保护的变量放在sem_wait和sem_post中间所形成的临界区内，这样该变量就会被保护起来，例如：</p>
<pre name="code" class="html">#include &lt;pthread.h&gt;
#include &lt;semaphore.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;stdio.h&gt;
#include &lt;unistd.h&gt;

int global_var;
sem_t sem_id;

void* thread_fun2(void *arg)
{
//偿试信号量是否大于0，如果是减1，如果不是等待
		sem_wait(&amp;sem_id);
		printf(&quot;fun2\n&quot;);
		global_var--;
		printf(&quot;global_var = %d\n&quot;,global_var);
//信号量加1
		sem_post(&amp;sem_id);
	
}
void* thread_fun1(void *arg)
{

//偿试信号量是否大于0，如果是减1，如果不是等待
		sem_wait(&amp;sem_id);
		printf(&quot;fun1\n&quot;);
		global_var--;
		printf(&quot;global_var = %d\n&quot;,global_var);
//信号量加1
		sem_post(&amp;sem_id);
	
}

int main(void)
{
	global_var = 1;
	pthread_t id1, id2;

//初始化信号量
	sem_init(&amp;sem_id,0,1);

	pthread_create(&amp;id1, NULL, thread_fun1,NULL);
	pthread_create(&amp;id2, NULL, thread_fun2,NULL);
	pthread_join(id1,NULL);
	pthread_join(id2,NULL);

	printf(&quot;main...\n&quot;);

	return 0;

}</pre>
<p></p>
<p>&nbsp; 上面的例程，到底哪个线程先申请到信号量资源，这是随机的。如果想要某个特定的顺序的话，可以用2个信号量来实现。例如下面的例程是线程1先执行完，然后线程2才继续执行，直至结束。<br>
</p>
<pre name="code" class="cpp">#include &lt;stdio.h&gt;
#include &lt;pthread.h&gt;
#include &lt;semaphore.h&gt;

sem_t sem_id1,sem_id2;

int global_var;

void * pt1_func(void *argc)
{
	while(1){
		sem_wait(&amp;sem_id1);

		global_var =0;
		printf(&quot;func 1 global_var = %d\n&quot;,global_var);
		sleep(2);

		sem_post(&amp;sem_id2);
	}
}

void *pt2_func(void *argc)
{
	while(1){
		sem_wait(&amp;sem_id2);
		
		global_var = 1;
		printf(&quot;func 2 global_var = %d\n&quot;,global_var);
		sleep(2);

		sem_post(&amp;sem_id1);
	}
}

int main(void)
{
	pthread_t pt1;
	pthread_t pt2;

	sem_init(&amp;sem_id1,0,1);
	sem_init(&amp;sem_id2,0,0);

	pthread_create(&amp;pt1,NULL,pt1_func,NULL);
	pthread_create(&amp;pt2,NULL,pt2_func,NULL);
	pthread_join(pt1,NULL);
	pthread_join(pt2,NULL);

	printf(&quot;main..\n&quot;);

	return 0;
}</pre>（b）无名信号量在相关进程间的同步说是相关进程，是因为本程序中共有2个进程，其中一个是另外一个的子进程（由fork产生）的。本来对于fork来说，子进程只继承了父进程的代码副本，mutex理应在父子进程中是相互独立的两个变量，但由于在初始化mutex的时候，由pshared = 1指定了mutex处于共享内存区域，所以此时mutex变成了父子进程共享的一个变量。此时，mutex就可以用来同步相关进程了。<br>
<pre name="code" class="cpp">#include &lt;stdio.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;unistd.h&gt;
#include &lt;semaphore.h&gt;

int main(void)
{
	sem_t sem_id;
//第二个参数为1
	sem_init(&amp;sem_id,1,1);

	if(0 == fork()){
		while(1){
			sem_wait(&amp;sem_id);
			printf(&quot;This child \n&quot;);
			sleep(2);
			sem_post(&amp;sem_id);
		}
	}

	while(1){
		sem_wait(&amp;sem_id);
		printf(&quot;This father\n&quot;);
		sleep(2);
		sem_post(&amp;sem_id);
	}

	return 0;
}</pre><strong>2．有名信号量</strong><br>
有名信号量的特点是把信号量的&#20540;保存在文件中。<br>
这决定了它的用途非常广：既可以用于线程，也可以用于相关进程间，甚至是不相关进程。<br>
（a）有名信号量能在进程间共享的原因由于有名信号量的&#20540;是保存在文件中的，所以对于相关进程来说，子进程是继承了父进程的文件描述符，那么子进程所继承的文件描述符所指向的文件是和父进程一样的，当然文件里面保存的有名信号量&#20540;就共享了。<br>
（b）有名信号量相关函数说明有名信号量在使用的时候，和无名信号量共享sem_wait和sem_post函数。<br>
区别是有名信号量使用sem_open代替sem_init，另外在结束的时候要像关闭文件一样去关闭这个有名信号量。<br>
&nbsp;(1)打开一个已存在的有名信号量，或创建并初始化一个有名信号量。一个单一的调用就完成了信号量的创建、初始化和权限的设置。<br>
sem_t *sem_open(const char *name, &nbsp;int oflag, mode_t mode , int value);<br>
name是文件的路径名；<br>
Oflag 有O_CREAT或O_CREAT|EXCL两个取&#20540;；<br>
mode_t控制新的信号量的访问权限；<br>
Value指定信号量的初始化&#20540;。<br>
&nbsp; 注意：这里的name不能写成/tmp/aaa.sem这样的&#26684;式，因为在linux下，sem都是创建在/dev/shm目录下。你可以将name写成“/mysem”或“mysem”，创建出来的文件都是“/dev/shm/sem.mysem”，千万不要写路径。也千万不要写“/tmp/mysem”之类的。<br>
当oflag = O_CREAT时，若name指定的信号量不存在时，则会创建一个，而且后面的mode和value参数必须有效。若name指定的信号量已存在，则直接打开该信号量，同时忽略mode和value参数。<br>
当oflag = O_CREAT|O_EXCL时，若name指定的信号量已存在，该函数会直接返回error。<br>
(2) 一旦你使用了一信号量，销毁它们就变得很重要。<br>
在做这个之前，要确定所有对这个有名信号量的引用都已经通过sem_close（）函数关闭了，然后只需在退出或是退出处理函数中调用sem_unlink()去删除系统中的信号量，注意如果有任何的处理器或是线程引用这个信号量，sem_unlink()函数不会起到任何的作用。<br>
也就是说，必须是最后一个使用该信号量的进程来执行sem_unlick才有效。因为每个信号灯有一个引用计数器记录当前的打开次数，sem_unlink必须等待这个数为0时才能把name所指的信号灯从文件系统中删除。也就是要等待最后一个sem_close发生。<br>
（c）有名信号量在无相关进程间的同步<br>
前面已经说过，有名信号量是位于共享内存区的，那么它要保护的资源也必须是位于共享内存区，只有这样才能被无相关的进程所共享。<br>
在下面这个例子中，服务进程和客户进程都使用shmget和shmat来获取得一块共享内存资源。然后利用有名信号量来对这块共享内存资源进行互斥保护。<br>
File1: server.c&nbsp;<br>
<pre name="code" class="cpp">#include &lt;stdio.h&gt;
#include &lt;sys/shm.h&gt;
#include &lt;semaphore.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;sys/ipc.h&gt;

#define SHMSZ 27
#define SEM_NAME &quot;vik3&quot;

int main(void)
{
	char ch;
	int shmid;
	key_t key;
	char *shm, *s;
	sem_t *mutex;

	key = 1000;

	mutex = sem_open(SEM_NAME,O_CREAT,0644,1);
	if(mutex == SEM_FAILED){
		printf(&quot;unable to create semaphore&quot;);
		sem_unlink(SEM_NAME);
		return -1;
	}

	shmid = shmget(key, SHMSZ, IPC_CREAT|0666);
	if(shmid &lt; 0){
		printf(&quot;failure in shmget&quot;);
		return -1;
	}

	shm = shmat(shmid,NULL,0);
	s = shm;

	for(ch ='A'; ch &lt;= 'Z'; ch++){
		sem_wait(mutex);
		*s++ = ch;
		sem_post(mutex);
	}

	while(*shm != '*'){
		sleep(1);
	}

	sem_close(mutex);
	sem_unlink(SEM_NAME);
	shmctl(shmid, IPC_RMID, 0);

	return -1;
}</pre>File 2: client.c<br>
<pre name="code" class="cpp">#include &lt;sys/types.h&gt;
#include &lt;sys/shm.h&gt;
#include &lt;stdio.h&gt;
#include &lt;semaphore.h&gt;

#define SHMSZ 27
#define SEM_NAME &quot;vik3&quot;

int main(void)
{
	char ch;
	int shmid;
	key_t key;
	char *shm,*s;
	sem_t *mutex;

	key = 1000;

	mutex = sem_open(SEM_NAME,0,0644,0);
	if(mutex == SEM_FAILED){
		printf(&quot;unable to execute semaphore\n&quot;);
		sem_close(mutex);
		return -1;
	}

	shmid = shmget(key,SHMSZ,0666);
	if(shmid &lt; 0){
		printf(&quot;failure in shmget&quot;);
		return -1;
	}

	shm = shmat(shmid,NULL,0);
	//s = shm;

	for(s = shm; *s != NULL; s++){
		sem_wait(mutex);
		putchar(*s);
		sem_post(mutex);
	}
	putchar('\n');
	*shm = '*';

	sem_close(mutex);
	sem_unlink(SEM_NAME);
	shmctl(shmid, IPC_RMID, 0);

	return -1;
}</pre>SYSTEM V信号量<br>
这是信号量&#20540;的集合，而不是单个信号量。相关的信号量操作函数由&lt;sys/ipc.h&gt;引用。<br>
1．信号量结构体<br>
内核为每个信号量集维护一个信号量结构体，可在&lt;sys/sem.h&gt;找到该定义：<br>
struct semid_ds {<br>
struct ipc_perm sem_perm; /* 信号量集的操作许可权限*/<br>
struct sem *sem_base; /* 某个信号量sem结构数组的指针，当前信号量集<br>
中的每个信号量对应其中一个数组元素*/<br>
ushort sem_nsems; /* sem_base 数组的个数*/<br>
time_t sem_otime; /* 最后一次成功修改信号量数组的时间*/<br>
time_t sem_ctime; /* 成功创建时间*/<br>
};<br>
struct sem {<br>
ushort semval; /* 信号量的当前&#20540; */<br>
short sempid; /* 最后一次返回该信号量的进程ID号 */<br>
ushort semncnt; /* 等待semval大于当前&#20540;的进程个数 */<br>
ushort semzcnt; /* 等待semval变成0的进程个数 */<br>
};<br>
2．常见的SYSTEM V信号量函数<br>
（a）关键字和描述符SYSTEM V信号量是SYSTEM V IPC（即SYSTEM V进程间通信）的组成部分，其他的有SYSTEM V消息队列，SYSTEM V共享内存。而关键字和IPC描述符无疑是它们的共同点，也使用它们，就不得不先对它们进行熟悉。这里只对SYSTEM V信号量进行讨论。IPC描述符相当于引用ID号，要想使用SYSTEM V信号量（或MSG、SHM），就必须用IPC描述符来调用信号量。而IPC描述符是内核动态提供的（通过semget来获取），用户无法让服务器和客户事先认可共同使用哪个描述符，所以有时候就需要到关键字KEY来定位描述符。<br>
某个KEY只会固定对应一个描述符（这项转换工作由内核完成），这样假如服务器和客户事先认可共同使用某个KEY，那么大家就都能定位到同一个描述符，也就能定位到同一个信号量，这样就达到了SYSTEM V信号量在进程间共享的目的。<br>
（b）创建和打开信号量<br>
int semget(key_t &nbsp;key, int &nbsp;nsems, int &nbsp;oflag)<br>
(1) nsems&gt;0 &nbsp;: 创建一个信的信号量集，指定集合中信号量的数量，一旦创建就不能更改。<br>
(2) nsems==0 : 访问一个已存在的集合<br>
(3) 返回的是一个称为信号量标识符的整数，semop和semctl函数将使用它。<br>
(4) 创建成功后信号量结构被设置：<br>
&nbsp; &nbsp; .sem_perm 的uid和gid成员被设置成的调用进程的有效用户ID和有效组ID<br>
&nbsp; &nbsp; .oflag 参数中的读写权限位存入sem_perm.mode<br>
&nbsp; &nbsp; .sem_otime 被置为0,sem_ctime被设置为当前时间<br>
&nbsp; &nbsp; .sem_nsems 被置为nsems参数的&#20540;<br>
&nbsp; &nbsp; 该集合中的每个信号量不初始化，这些结构是在semctl，用参数SET_VAL，SETALL初始化的。<br>
&nbsp; &nbsp; semget函数执行成功后，就产生了一个由内核维持的类型为semid_ds结构体的信号量集，返回semid就是指向该信号量集的引索。<br>
（c）关键字的获取<br>
&nbsp; &nbsp; &nbsp; &nbsp;有多种方法使客户机和服务器在同一IPC结构上会合：<br>
(1) 服务器可以指定关键字IPC_PRIVATE创建一个新IPC结构，将返回的标识符存放在某处（例如一个文件）以便客户机取用。关键字IPC_PRIVATE保证服务器创建一个新IPC结构。这种技术的缺点是：服务器要将整型标识符写到文件中，然后客户机在此后又要读文件取得此标识符。<br>
IPC_PRIVATE关键字也可用于父、子关系进程。父进程指定IPC_PRIVATE创建一个新IPC结构，所返回的标识符在fork后可由子进程使用。子进程可将此标识符作为exec函数的一个参数传给一个新程序。<br>
(2) 在一个公用头文件中定义一个客户机和服务器都认可的关键字。然后服务器指定此关键字创建一个新的IPC结构。这种方法的问题是该关键字可能已与一个IPC结构相结合，在此情况下，get函数（msgget、semget或shmget）出错返回。服务器必须处理这一错误，删除已存在的IPC结构，然后试着再创建它。当然，这个关键字不能被别的程序所占用。<br>
(3) 客户机和服务器认同一个路径名和课题I D（课题I D是0 ~ 2 5 5之间的字符&#20540;） ，然后调用函数ftok将这两个&#20540;变换为一个关键字。这样就避免了使用一个已被占用的关键字的问题。<br>
使用ftok并非高枕无忧。有这样一种例外：服务器使用ftok获取得一个关键字后，该文件就被删除了，然后重建。此时客户端以此重建后的文件来ftok所获取的关键字就和服务器的关键字不一样了。所以一般商用的软件都不怎么用ftok。<br>
一般来说，客户机和服务器至少共享一个头文件，所以一个比较简单的方法是避免使用ftok，而只是在该头文件中存放一个大家都知道的关键字。 &nbsp; &nbsp;<br>
（d）设置信号量的&#20540;（PV操作）<br>
某个KEY只会固定对应一个描述符（这项转换工作由内核完成），这样假如服务器和客户事先认可共同使用某个KEY，那么大家就都能定位到同一个描述符，也就能定位到同一个信号量，这样就达到了SYSTEM V信号量在进程间共享的目的。<br>
（b）创建和打开信号量<br>
int semget(key_t &nbsp;key, int &nbsp;nsems, int &nbsp;oflag)<br>
(1) nsems&gt;0 &nbsp;: 创建一个信的信号量集，指定集合中信号量的数量，一旦创建就不能更改。<br>
(2) nsems==0 : 访问一个已存在的集合<br>
(3) 返回的是一个称为信号量标识符的整数，semop和semctl函数将使用它。<br>
(4) 创建成功后信号量结构被设置：<br>
&nbsp; &nbsp; .sem_perm 的uid和gid成员被设置成的调用进程的有效用户ID和有效组ID<br>
&nbsp; &nbsp; .oflag 参数中的读写权限位存入sem_perm.mode<br>
&nbsp; &nbsp; .sem_otime 被置为0,sem_ctime被设置为当前时间<br>
&nbsp; &nbsp; .sem_nsems 被置为nsems参数的&#20540;<br>
&nbsp; &nbsp; 该集合中的每个信号量不初始化，这些结构是在semctl，用参数SET_VAL，SETALL初始化的。<br>
&nbsp; &nbsp; semget函数执行成功后，就产生了一个由内核维持的类型为semid_ds结构体的信号量集，返回semid就是指向该信号量集的引索。<br>
（c）关键字的获取<br>
&nbsp; &nbsp; &nbsp; &nbsp;有多种方法使客户机和服务器在同一IPC结构上会合：<br>
(1) 服务器可以指定关键字IPC_PRIVATE创建一个新IPC结构，将返回的标识符存放在某处（例如一个文件）以便客户机取用。关键字IPC_PRIVATE保证服务器创建一个新IPC结构。这种技术的缺点是：服务器要将整型标识符写到文件中，然后客户机在此后又要读文件取得此标识符。<br>
IPC_PRIVATE关键字也可用于父、子关系进程。父进程指定IPC_PRIVATE创建一个新IPC结构，所返回的标识符在fork后可由子进程使用。子进程可将此标识符作为exec函数的一个参数传给一个新程序。<br>
(2) 在一个公用头文件中定义一个客户机和服务器都认可的关键字。然后服务器指定此关键字创建一个新的IPC结构。这种方法的问题是该关键字可能已与一个IPC结构相结合，在此情况下，get函数（msgget、semget或shmget）出错返回。服务器必须处理这一错误，删除已存在的IPC结构，然后试着再创建它。当然，这个关键字不能被别的程序所占用。<br>
(3) 客户机和服务器认同一个路径名和课题I D（课题I D是0 ~ 2 5 5之间的字符&#20540;） ，然后调用函数ftok将这两个&#20540;变换为一个关键字。这样就避免了使用一个已被占用的关键字的问题。<br>
使用ftok并非高枕无忧。有这样一种例外：服务器使用ftok获取得一个关键字后，该文件就被删除了，然后重建。此时客户端以此重建后的文件来ftok所获取的关键字就和服务器的关键字不一样了。所以一般商用的软件都不怎么用ftok。<br>
一般来说，客户机和服务器至少共享一个头文件，所以一个比较简单的方法是避免使用ftok，而只是在该头文件中存放一个大家都知道的关键字。 &nbsp; &nbsp;<br>
（d）设置信号量的&#20540;（PV操作）<br>
int semop(int semid, struct sembuf *opsptr, size_t nops);<br>
(1) semid： 是semget返回的semid<br>
(2)opsptr： 指向信号量操作结构数组<br>
(3) nops ： opsptr所指向的数组中的sembuf结构体的个数<br>
struct sembuf {<br>
short sem_num; // 要操作的信号量在信号量集里的编号，<br>
short sem_op; // 信号量操作<br>
short sem_flg; // 操作表示符<br>
};<br>
(4) 若sem_op 是正数，其&#20540;就加到semval上，即释放信号量控制的资源<br>
&nbsp; &nbsp; 若sem_op 是0，那么调用者希望等到semval变为0，如果semval是0就返回;<br>
若sem_op 是负数，那么调用者希望等待semval变为大于或等于sem_op的绝对&#20540;<br>
例如，当前semval为2，而sem_op = -3，那么怎么办？<br>
注意：semval是指semid_ds中的信号量集中的某个信号量的&#20540;<br>
(5) sem_flg<br>
&nbsp; &nbsp; SEM_UNDO &nbsp; &nbsp; 由进程自动释放信号量<br>
&nbsp; &nbsp; IPC_NOWAIT &nbsp; &nbsp;不阻塞 &nbsp;&nbsp;<br>
到这里，读者肯定有个疑惑：semop希望改变的semval到底在哪里？我们怎么没看到有它的痕迹？其实，前面已经说明了，当使用semget时，就产生了一个由内核维护的信号量集（当然每个信号量&#20540;即semval也是只由内核才能看得到了），用户能看到的就是返回的semid。内核通过semop函数的参数，知道应该去改变semid所指向的信号量的哪个semval。<br>
<pre name="code" class="cpp">#include &lt;stdio.h&gt; 
#include &lt;stdlib.h&gt; 
#include &lt;sys/types.h&gt; 
#include &lt;sys/ipc.h&gt; 
#include &lt;sys/sem.h&gt; 
#include &lt;sys/stat.h&gt; 
#include &lt;fcntl.h&gt; 
 
union semun 
{ 
    int val; 
    struct semid_ds *buf; 
    unsigned short int *array; 
    struct seminfo *__buf; 
}; 
 
int main(void) 
{ 
    char* buf_child[]={&quot;this&quot;, &quot;is&quot;, &quot;the&quot;, &quot;child&quot;, &quot;process&quot;}; 
    char* buf_father[]={&quot;father&quot;, &quot;say&quot;, &quot;hello&quot;, &quot;to&quot;, &quot;child&quot;}; 
    int i = 0, semid, fd; 
    pid_t pid; 
    struct sembuf sb; //信号量操作
    union semun sem; 
    semid = semget(1000, 2, 0666 | IPC_CREAT); //申请信号量组，包含2个信号量
 
    sem.val = 0; 
    semctl(semid, 0, SETVAL, sem); //初始化0号信号量为0
    sem.val = 1; 
    semctl(semid, 1, SETVAL, sem); //初始化1号信号量为1
 
    fd=open(&quot;tmp&quot;,O_CREAT|O_TRUNC|O_WRONLY,0666); 
 
    pid = fork(); 
    switch (pid) { 
        case -1: 
            perror(&quot;fork fail&quot;); 
            break; 
        case 0: /* child consume */ 
            srand((unsigned int)getpid()); 
            while (i &lt; 5) { 
                sb.sem_num = 1; //将1号信号量
                sb.sem_op = -1; //减1
                sb.sem_flg = sb.sem_flg &amp; ~IPC_NOWAIT; 
                semop(semid, &amp;sb, 1); 
 
                write(fd,buf_child[i], strlen(buf_child[i])); 
                sleep(2); 
                write(fd,&amp;&quot; &quot;, 1); 
                i++; 
 
                sb.sem_num = 0; //将0号信号量
                sb.sem_op = 1;  //加1
                sb.sem_flg = sb.sem_flg &amp; ~IPC_NOWAIT; 
                semop(semid, &amp;sb, 1); //操作信号量
            } 
            break; 
        default:/* parent production  */ 
            srand((unsigned int)getpid()); 
            while (i &lt; 5) { 
                sb.sem_num = 0; //将0号信号量
                sb.sem_op = -1; //减1
                sb.sem_flg = sb.sem_flg &amp; ~IPC_NOWAIT; 
                semop(semid, &amp;sb, 1); //操作信号量
 
                write(fd,buf_father[i], strlen(buf_father[i])); 
                sleep(2); 
                write(fd,&amp;&quot; &quot;, 1); 
                i++; 
 
                sb.sem_num = 1; 
                sb.sem_op = 1; 
                sb.sem_flg = sb.sem_flg &amp; ~IPC_NOWAIT; 
                semop(semid, &amp;sb, 1); 
            } 
            break; 
    } 
    return 0; 
}</pre>（e）对信号集实行控制操作（semval的赋&#20540;等）<br>
int semctl(int semid, int semum, int cmd, ../* union semun arg */);&nbsp;<br>
semid是信号量集合；<br>
semnum是信号在集合中的序号；<br>
semum是一个必须由用户自定义的结构体，在这里我们务必弄清楚该结构体的组成：<br>
union semun<br>
{<br>
int val; // cmd == SETVAL<br>
struct semid_ds *buf // cmd == IPC_SET或者cmd == IPC_STAT<br>
ushort *array; // cmd == SETALL，或cmd = GETALL<br>
};<br>
val只有cmd ==SETVAL时才有用，此时指定的semval = arg.val。<br>
注意：当cmd == GETVAL时，semctl函数返回的&#20540;就是我们想要的semval。千万不要以为指定的semval被返回到arg.val中。<br>
&nbsp; &nbsp; array指向一个数组，当cmd==SETALL时，就根据arg.array来将信号量集的所有&#20540;都赋&#20540;；当cmd ==GETALL时，就将信号量集的所有&#20540;返回到arg.array指定的数组中。<br>
buf指针只在cmd==IPC_STAT或IPC_SET时有用，作用是semid所指向的信号量集（semid_ds机构体）。一般情况下不常用，这里不做谈论。<br>
另外，cmd == IPC_RMID还是比较有用的。<br>
例<br>
#include &lt;sys/types.h&gt;<br>
#include &lt;sys/ipc.h&gt;<br>
#include &lt;sys/sem.h&gt;<br>
#include &lt;stdio.h&gt;&nbsp;<br>
static int nsems;<br>
static int semflg;<br>
static int semid;<br>
int errno=0;&nbsp;<br>
union semun {<br>
int val;<br>
struct semid_ds *buf;<br>
unsigned short *array;<br>
}arg;&nbsp;<br>
int main()<br>
{<br>
struct sembuf sops[2]; //要用到两个信号量，所以要定义两个操作数组<br>
int rslt;<br>
unsigned short argarray[80];&nbsp;<br>
arg.array = argarray;<br>
semid = semget(IPC_PRIVATE, 2, 0666);<br>
if(semid &lt; 0 )<br>
{<br>
printf(&quot;semget failed. errno: %d\n&quot;, errno);<br>
exit(0);<br>
}&nbsp;<br>
//获取0th信号量的原始&#20540;<br>
rslt = semctl(semid, 0, GETVAL);<br>
printf(&quot;val = %d\n&quot;,rslt);<br>
//初始化0th信号量，然后再读取，检查初始化有没有成功<br>
arg.val = 1; // 同一时间只允许一个占有者<br>
semctl(semid, 0, SETVAL, arg);<br>
rslt = semctl(semid, 0, GETVAL);<br>
printf(&quot;val = %d\n&quot;,rslt);&nbsp;<br>
sops[0].sem_num = 0;<br>
sops[0].sem_op = -1;<br>
sops[0].sem_flg = 0;<br>
sops[1].sem_num = 1;<br>
sops[1].sem_op = 1;<br>
sops[1].sem_flg = 0;<br>
rslt=semop(semid, sops, 1); //申请0th信号量，尝试锁定<br>
if (rslt &lt; 0 )<br>
{<br>
printf(&quot;semop failed. errno: %d\n&quot;, errno);<br>
exit(0);<br>
}<br>
//可以在这里对资源进行锁定<br>
sops[0].sem_op = 1;<br>
semop(semid, sops, 1); //释放0th信号量<br>
rslt = semctl(semid, 0, GETVAL);<br>
printf(&quot;val = %d\n&quot;,rslt);&nbsp;<br>
rslt=semctl(semid, 0, GETALL, arg);<br>
if (rslt &lt; 0)<br>
{<br>
printf(&quot;semctl failed. errno: %d\n&quot;, errno);<br>
exit(0);<br>
}&nbsp;<br>
printf(&quot;val1:%d val2: %d\n&quot;,(unsigned int)argarray[0],(unsigned int)argarray[1]);<br>
if(semctl(semid, 1, IPC_RMID) == -1)<br>
{<br>
Perror(“semctl failure while clearing reason”);<br>
}<br>
return(0);<br>
}<br>
生产者与消费者问题<br>
1．问题描述：<br>
有一个长度为N的缓冲池为生产者和消费者所共有，只要缓冲池未满，生产者便可将消息送入缓冲池；只要缓冲池未空，消费者便可从缓冲池中取走一个消息。生产者往缓冲池放信息的时候，消费者不可操作缓冲池，反之亦然。<br>
2．使用多线程和信号量解决该经典问题的互斥<br>
<pre name="code" class="cpp"><pre name="code" class="cpp">#include &lt;stdio.h&gt;
#include &lt;pthread.h&gt;
#include &lt;semaphore.h&gt;

#define BUFF_SIZE 10
char buffer[BUFF_SIZE];
char count;
sem_t sem_mutex;
sem_t p_sem_mutex;
sem_t c_sem_mutex;

void *p_funp(void *argc)
{
	sem_wait(&amp;p_sem_mutex);
	sem_wait(&amp;sem_mutex);


	count ++;


	if(count &lt; BUFF_SIZE)
		sem_post(&amp;p_sem_mutex);
	if(count &gt; 0)
		sem_post(&amp;c_sem_mutex);
	sem_post(&amp;sem_mutex);
}

void *c_func(void *arg)
{
	sem_wait(&amp;c_sem_mutex);
	sem_wait(&amp;sem_mutex);


	count--;


	if(count &gt; 0)
		sem_post(&amp;c_sem_mutex);
	if(count &lt; BUFF_SIZE)
		sem_post(&amp;p_sem_mutex);


	sem_post(&amp;sem_mutex);
}

int main(void)
{
	pthread_t pid1,pid2;

	sem_init(&amp;sem_mutex,0,1);
	sem_init(&amp;p_sem_mutex,0,1);
	sem_init(&amp;c_sem_mutex,0,0);

	pthread_create(&amp;pid1,NULL,p_func,NULL);
	pthread_create(&amp;pid2,NULL,c_func,NULL);

	pthread_join(pid1,NULL);
	pthread_join(pid2,NULL);

	sem_destory(&amp;sem_mutex);
	sem_destory(&amp;c_sem_mutex);
	sem_destory(&amp;p_sem_mutex);

	return 0;
}
</pre><br>
<br>
<pre></pre>
<br>
<p></p>
   
</div>




<!-- Baidu Button BEGIN -->




<div class="bdsharebuttonbox tracking-ad" style="float: right;" data-mod="popu_172">
<a href="#" class="bds_more" data-cmd="more" style="background-position:0 0 !important; background-image: url(http://bdimg.share.baidu.com/static/api/img/share/icons_0_16.png?v=d754dcc0.png) !important"></a>
<a href="#" class="bds_qzone" data-cmd="qzone" title="分享到QQ空间"  style="background-position:0 -52px !important"></a>
<a href="#" class="bds_tsina" data-cmd="tsina" title="分享到新浪微博"style="background-position:0 -104px !important"></a>
<a href="#" class="bds_tqq" data-cmd="tqq" title="分享到腾讯微博"style="background-position:0 -260px !important"></a>
<a href="#" class="bds_renren" data-cmd="renren" title="分享到人人网"style="background-position:0 -208px !important"></a>
<a href="#" class="bds_weixin" data-cmd="weixin" title="分享到微信"style="background-position:0 -1612px !important" ></a>
</div>
<script>window._bd_share_config = { "common": { "bdSnsKey": {}, "bdText": "", "bdMini": "1", "bdMiniList": false, "bdPic": "", "bdStyle": "0", "bdSize": "16" }, "share": {} }; with (document) 0[(getElementsByTagName('head')[0] || body).appendChild(createElement('script')).src = 'http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion=' + ~(-new Date() / 36e5)];</script>
<!-- Baidu Button END -->

   <link rel="stylesheet" href="http://static.blog.csdn.net/css/blog_detail.css" />

    
<!--172.16.140.11-->

<!-- Baidu Button BEGIN -->
<script type="text/javascript" id="bdshare_js" data="type=tools&amp;uid=1536434" ></script>
<script type="text/javascript" id="bdshell_js"></script>
<script type="text/javascript">
    document.getElementById("bdshell_js").src = "http://bdimg.share.baidu.com/static/js/shell_v2.js?cdnversion=" + Math.ceil(new Date()/3600000)
</script>
<!-- Baidu Button END -->

 


        <div id="digg" ArticleId="8965733" >
            <dl id="btnDigg" class="digg digg_enable"  onclick="btndigga();">
               
                 <dt>顶</dt>
                <dd>0</dd>
            </dl>
           
              
            <dl id="btnBury" class="digg digg_enable"  onclick="btnburya();">
              
                  <dt>踩</dt>
                <dd>0</dd>               
            </dl>
            
        </div>
     <div class="tracking-ad" data-mod="popu_222"><a href="javascript:void(0);" >&nbsp;</a>   </div>
    <div class="tracking-ad" data-mod="popu_223"> <a href="javascript:void(0);" >&nbsp;</a></div>
    <script type="text/javascript">
                function btndigga() {
                    $(".tracking-ad[data-mod='popu_222'] a").click();
                }
                function btnburya() {
                    $(".tracking-ad[data-mod='popu_223'] a").click();
                }
            </script>

   <ul class="article_next_prev">
                <li class="prev_article"><span  onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_shangyipian']);location.href='/weed_hz/article/details/8960418';">上一篇</span><a href="/weed_hz/article/details/8960418" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_shangyipian'])">Linux /dev 自动创建设备节点</a></li>
                <li class="next_article"><span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_xiayipian']);location.href='/weed_hz/article/details/8977449';">下一篇</span><a href="/weed_hz/article/details/8977449" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_xiayipian'])">Pattern和Matcher简单用法</a></li>
    </ul>

    <div style="clear:both; height:10px;"></div>


        <div class="similar_article"  style="display:none">
                <h4>我的同类文章</h4>
                <div class="similar_c"style="margin:20px 0px 0px 0px">
                    <div class="similar_c_t">
                                <label class="similar_cur">
                                    <span  style="cursor:pointer"  onclick="GetCategoryArticles('1422895','weed_hz','foot','8965733');">linux_kernel<em>（72）</em></span>
                                </label>
                                <label class="">
                                    <span  style="cursor:pointer"  onclick="GetCategoryArticles('1422919','weed_hz','foot','8965733');">linux_application<em>（38）</em></span>
                                </label>
                    </div>
                   
                    <div class="similar_wrap tracking-ad" data-mod="popu_141"  style="max-height:195px;">
                        <a href="http://blog.csdn.net" style="display:none">http://blog.csdn.net</a>
                        <ul class="similar_list fl">                          
                        </ul>

                        <ul class="similar_list fr">                           
                        </ul>
                    </div>
                </div>
            </div>    
    <script  type="text/javascript">
        $(function () {
            GetCategoryArticles('1422895', 'weed_hz','foot','8965733');
        });
    </script>
      
</div>

     <div>
             <ins data-revive-zoneid="206" data-revive-id="8c38e720de1c90a6f6ff52f3f89c4d57"></ins> 
    </div>

<div id="suggest"></div>
         <script  language="javascript" type='text/javascript'>     
             $(function(){
                 $.get("/weed_hz/svc/GetSuggestContent/8965733",function(data){
                     $("#suggest").html(data);
                 });     
             });             
         </script>  


<style>
.blog-ass-articl dd {
color: #369;
width: 99%; /*修改行*/
float: left;
overflow: hidden;
font: normal normal 12px/23px "SimSun";
height: 23px;
margin: 0;
padding: 0 0 0 10px;
margin-right: 30px;
background: url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px;
}
</style>

 <link rel="stylesheet" href="http://static.blog.csdn.net/css/replace.css"/>
<div id="relate" data-mod="popu_218"  class="tracking-ad">
        <div class="relate_t">
            <h3><span>参考知识库</span></h3>
        </div>
        <div class="relate_c">
        </div>
</div>
 

<dl class="blog-ass-articl" id="res-relatived" > 
    <div class="embody embody_b" id="libkeyparent"  style="display:none">
            <span class="embody_t">更多资料请参考：</span>
            <div class="embody_c" id="libkey"></div>
    </div>


     <dt><span>猜你在找</span></dt>    


   


    <div id="adCollege" style="width: 42%;float: left;"> 
        <script src="http://csdnimg.cn/jobreco/job_reco.js" type="text/javascript"></script> 
        <script type="text/javascript">
            csdn.position.showEdu({
                sourceType: "blog",
                searchType: "detail",
                searchKey: "8965733",
                username: "yonka",
                recordcount: "5",
                containerId: "adCollege" //容器DIV的id。 
            });
        </script> 
    </div>  

    
     <div id="res"  data-mod="popu_36"  class="tracking-ad" style="width: 42%;float: left;margin-right: 30px;"></div>
   
</dl>


<script type="text/javascript">
    $(function () {
        setTimeout(function () {
            var searchtitletags = 'linux 内核信号量 用户态信号量 详解' + ',' + $("#tags").html();
            searchService({
                index: 'blog',
                query: searchtitletags,
                from: 5,
                size: 5,
                appendTo: '#res',
                url: 'recommend',
                his: 2,
                client: "blog_cf_enhance",
                tmpl: '<dd style="background:url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px;"><a href="#{ url }" title="#{ title }" strategy="#{ strategy }">#{ title }</a></dd>'
            });
        }, 500);
    });    

 </script>  


    <div id="ad_cen">        
                      <ins data-revive-zoneid="199" data-revive-id="8c38e720de1c90a6f6ff52f3f89c4d57"></ins>
    </div>  

    <!-- 广告位开始 -->
    <ins data-revive-zoneid="72" data-revive-id="8c38e720de1c90a6f6ff52f3f89c4d57"></ins>
    <!-- 广告位结束 -->

<div class="comment_class">
    <div id="comment_title" class="panel_head">
        <span class="see_comment">查看评论</span><a name="comments"></a></div>
    <div id="comment_list">
    </div>
    <div id="comment_bar">
    </div>
    <div id="comment_form">
    </div>
    <div class="announce">
        * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场<a name="reply"></a><a name="quote"></a></div>
</div>

<script type="text/javascript">
    var fileName = '8965733';
    var commentscount = 0;
    var islock = false
</script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/comment.js"></script>
    <div id="ad_bot">
    </div>
<div id="report_dialog">
</div>

<div id="d-top"  style="bottom:60px;">

        <a id="quick-reply" class="btn btn-top q-reply" title="快速回复" style="display:none;">
            <img src="http://static.blog.csdn.net/images/blog-icon-reply.png" alt="快速回复">
        </a>    
    <a id="d-top-a" class="btn btn-top backtop"  style="display: none;" title="返回顶部" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_huidaodingbu'])" style="">         
         <img src="http://static.blog.csdn.net/images/top.png" alt="TOP">
    </a>
</div>
<script type="text/javascript">
    $(function ()
    {
        $("#ad_frm_0").height("90px");
        
        setTimeout(function(){
            $("#ad_frm_2").height("200px");
        },1000);    
    });
  
</script>
<style type="text/css">
    .tag_list
    {
        background: none repeat scroll 0 0 #FFFFFF;
        border: 1px solid #D7CBC1;
        color: #000000;
        font-size: 12px;
        line-height: 20px;
        list-style: none outside none;
        margin: 10px 2% 0 1%;
        padding: 1px;
    }
    .tag_list h5
    {
        background: none repeat scroll 0 0 #E0DBD3;
        color: #47381C;
        font-size: 12px;
        height: 24px;
        line-height: 24px;
        padding: 0 5px;
        margin: 0;
    }
    .tag_list h5 a
    {
        color: #47381C;
    }
    .classify
    {
        margin: 10px 0;
        padding: 4px 12px 8px;
    }
    .classify a
    {
        margin-right: 20px;
        white-space: nowrap;
    }
</style>


<div class="tag_list" style="display:none"></div>
  <script  language="javascript" type='text/javascript'>     
      $(function(){
              setTimeout(function(){
                  $.get("/weed_hz/svc/GetTagContent",function(data){
                      $(".tag_list").html(data).show();
                  });     
              });
          },500);                       
 </script> 


<div id="pop_win" style="display:none ;position: absolute; z-index: 10000; border: 1px solid rgb(220, 220, 220); top: 222.5px; left: 630px; opacity: 1; background: none 0px 0px repeat scroll rgb(255, 255, 255);">
    
</div>
<div id="popup_mask"></div>
<style>
    #popup_mask
    {
        position: absolute;
        width: 100%;
        height: 100%;
        background: #000;
        z-index: 9999;
        left: 0px;
        top: 0px;
        opacity: 0.3;
        filter: alpha(opacity=30);
        display: none;
    }

</style>




<script type="text/javascript">
    $(function(){
        setTimeout(function(){
            $(".comment_body:contains('回复')").each(function(index,item){
                var u=$(this).text().split('：')[0].toString().replace("回复","")
                var thisComment=$(this);
                if(u)
                {
                    $.getJSON("https://passport.csdn.net/get/nick?callback=?", {users: u}, function(a) {
                        if(a!=null&&a.data!=null&&a.data.length>0)
                        {
                            nick=a.data[0].n; 
                            if(u!=nick)
                            {
                                thisComment.text(thisComment.text().replace(u,nick));  
                            }
                        }       
                    });  
                }
            });         

        },200);  

        setTimeout(function(){
            $(".math").each(function(index,value){$(this).find("span").last().css("color","#fff"); })
        },5000);

        setTimeout(function(){
            $(".math").each(function(index,value){$(this).find("span").last().css("color","#fff"); })
        },10000);

        setTimeout(function(){
            $(".math").each(function(index,value){$(this).find("span").last().css("color","#fff"); })
        },15000);
        
        setTimeout(function(){
            $("a img[src='http://js.tongji.linezing.com/stats.gif']").parent().css({"position":"absolute","left":"50%"});
        },300);
    });

    function loginbox(){
        var $logpop=$("#pop_win");
        $logpop.html('<iframe src="https://passport.csdn.net/account/loginbox?service=http://static.blog.csdn.net/callback.htm" frameborder="0" height="600" width="400" scrolling="no"></iframe>');

        $('#popup_mask').css({
            opacity: 0.5,
            width: $( document ).width() + 'px',
            height:  $( document ).height() + 'px'
        });
        $('#popup_mask').css("display","block");
 
        $logpop.css( {
            top: ($( window ).height() - $logpop.height())/ 2  + $( window 
       ).scrollTop() + 'px',
            left:($( window ).width() - $logpop.width())/ 2
        } );
 
        setTimeout( function () {
            $logpop.show();
            $logpop.css( {
                opacity: 1
            } );
        }, 200 );
 
        $('#popup_mask').unbind("click");
        $('#popup_mask').bind("click", function(){
            $('#popup_mask').hide();
            var $clopop = $("#pop_win");
            $("#common_ask_div_sc").css("display","none");
            $clopop.css( {
                opacity: 0
            } );
            setTimeout( function () {
                $clopop.hide();
            }, 350 );
            return false;
        });
    }   

</script>
 <script language="javascript" type="text/javascript" src="http://ads.csdn.net/js/async_new.js"></script>      




                        <div class="clear">
                        </div>
                    </div>                   
                
            </div>
                   
           <div id="side">
               
    <div class="side">
<div id="panel_Profile" class="panel">
<ul class="panel_head"><span>个人资料</span></ul>
<ul class="panel_body profile">
<div id="blog_userface">
    <a href="http://my.csdn.net/weed_hz" target="_blank">
    <img src="http://avatar.csdn.net/2/C/6/1_weed_hz.jpg" title="访问我的空间" style="max-width:90%"/>
    </a>
    <br />
    <span><a href="http://my.csdn.net/weed_hz" class="user_name" target="_blank">weed_hz</a></span>
</div>
<div class="interact">

    <a href="javascript:void(0);" class="attent" id="span_add_follow" title="[加关注]"></a>

 <a href="javascript:void(0);" class="letter"  title="[发私信]" onclick="window.open('http://msg.csdn.net/letters/model?receiver=weed_hz','_blank','height=350,width=700');_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_sixin'])"></a>  
</div>
<div id="blog_medal">
                <div id="bms_box">
                                            <a  target="_blank">
                                                    <img src="http://c.csdnimg.cn/jifen/images/xunzhang/xunzhang/chizhiyiheng.png" onmouseover="m_over_m(this,4)" onmouseout="m_out_m()" alt="1" >
                                            </a>
               </div>
</div>
<ul id="blog_rank">
    <li>访问：<span>248731次</span></li>
    <li>积分：<span>2879</span> </li>    
    <li >等级： <span style="position:relative;display:inline-block;z-index:1" >
            <img src="http://c.csdnimg.cn/jifen/images/xunzhang/jianzhang/blog5.png" alt="" style="vertical-align: middle;" id="leveImg">
            <div id="smallTittle" style=" position: absolute;  left: -24px;  top: 25px;  text-align: center;  width: 101px;  height: 32px;  background-color: #fff;  line-height: 32px;  border: 2px #DDDDDD solid;  box-shadow: 0px 2px 2px rgba (0,0,0,0.1);  display: none;   z-index: 999;">
            <div style="left: 42%;  top: -8px;  position: absolute;  width: 0;  height: 0;  border-left: 10px solid transparent;  border-right: 10px solid transparent;  border-bottom: 8px solid #EAEAEA;"></div>
            积分：2879 </div>
        </span>  </li>
    <li>排名：<span>第10022名</span></li>
</ul>
<ul id="blog_statistics">
    <li>原创：<span>24篇</span></li>
    <li>转载：<span>170篇</span></li>
    <li>译文：<span>0篇</span></li>
    <li>评论：<span>12条</span></li>
</ul>
</ul>
</div>


<div id="panel_Category" class="panel">
<ul class="panel_head"><span>文章分类</span></ul>
<ul class="panel_body">    
                 <li>
                    <a href="/weed_hz/article/category/1422883" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">linux_driver</a><span>(49)</span>
                </li>
                 <li>
                    <a href="/weed_hz/article/category/1422895" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">linux_kernel</a><span>(73)</span>
                </li>
                 <li>
                    <a href="/weed_hz/article/category/1422899" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">linux_filesystem</a><span>(10)</span>
                </li>
                 <li>
                    <a href="/weed_hz/article/category/1422919" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">linux_application</a><span>(39)</span>
                </li>
                 <li>
                    <a href="/weed_hz/article/category/1426447" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">uboot</a><span>(5)</span>
                </li>
                 <li>
                    <a href="/weed_hz/article/category/1422893" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">C/C++</a><span>(11)</span>
                </li>
                 <li>
                    <a href="/weed_hz/article/category/1422885" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">java</a><span>(3)</span>
                </li>
                 <li>
                    <a href="/weed_hz/article/category/1422882" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">windows</a><span>(1)</span>
                </li>
                 <li>
                    <a href="/weed_hz/article/category/1422894" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">.Net</a><span>(1)</span>
                </li>
                 <li>
                    <a href="/weed_hz/article/category/1422884" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">wince</a><span>(1)</span>
                </li>
                 <li>
                    <a href="/weed_hz/article/category/1422901" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">hardware</a><span>(2)</span>
                </li>
                 <li>
                    <a href="/weed_hz/article/category/1908097" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">android驱动JNI</a><span>(2)</span>
                </li>
                 <li>
                    <a href="/weed_hz/article/category/2129193" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">shell</a><span>(3)</span>
                </li>
                 <li>
                    <a href="/weed_hz/article/category/2135931" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">samba服务器</a><span>(3)</span>
                </li>
                 <li>
                    <a href="/weed_hz/article/category/2354953" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">mdk</a><span>(8)</span>
                </li>
                 <li>
                    <a href="/weed_hz/article/category/2838373" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">SDL</a><span>(0)</span>
                </li>
                 <li>
                    <a href="/weed_hz/article/category/2883035" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">ffmpeg</a><span>(0)</span>
                </li>
                 <li>
                    <a href="/weed_hz/article/category/6427084" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">live555</a><span>(0)</span>
                </li>
</ul>
</div><div id="panel_Archive" class="panel">
<ul class="panel_head"><span>文章存档</span></ul>
<ul class="panel_body">
<div id="archive_list">
<!--归档统计-->
<li><a href="/weed_hz/article/month/2016/09">2016年09月</a><span>(1)</span></li><li><a href="/weed_hz/article/month/2016/08">2016年08月</a><span>(1)</span></li><li><a href="/weed_hz/article/month/2016/05">2016年05月</a><span>(2)</span></li><li><a href="/weed_hz/article/month/2015/11">2015年11月</a><span>(1)</span></li><li><a href="/weed_hz/article/month/2014/09">2014年09月</a><span>(1)</span></li><li><a href="/weed_hz/article/month/2014/07">2014年07月</a><span>(6)</span></li><li><a href="/weed_hz/article/month/2014/06">2014年06月</a><span>(3)</span></li><li><a href="/weed_hz/article/month/2014/05">2014年05月</a><span>(5)</span></li><li><a href="/weed_hz/article/month/2014/04">2014年04月</a><span>(2)</span></li><li><a href="/weed_hz/article/month/2014/03">2014年03月</a><span>(11)</span></li><li><a href="/weed_hz/article/month/2014/02">2014年02月</a><span>(2)</span></li><li><a href="/weed_hz/article/month/2014/01">2014年01月</a><span>(1)</span></li><li><a href="/weed_hz/article/month/2013/12">2013年12月</a><span>(6)</span></li><li><a href="/weed_hz/article/month/2013/11">2013年11月</a><span>(1)</span></li><li><a href="/weed_hz/article/month/2013/10">2013年10月</a><span>(10)</span></li><li><a href="/weed_hz/article/month/2013/09">2013年09月</a><span>(17)</span></li><li><a href="/weed_hz/article/month/2013/08">2013年08月</a><span>(17)</span></li><li><a href="/weed_hz/article/month/2013/07">2013年07月</a><span>(12)</span></li><li><a href="/weed_hz/article/month/2013/06">2013年06月</a><span>(21)</span></li><li><a href="/weed_hz/article/month/2013/05">2013年05月</a><span>(70)</span></li><li><a href="/weed_hz/article/month/2010/06">2010年06月</a><span>(3)</span></li><li><a href="/weed_hz/article/month/2010/05">2010年05月</a><span>(4)</span></li>
</div>
</ul>
</div>
<div id="hotarticls" class="panel">
<ul class="panel_head">
    <span>       
阅读排行    </span>
</ul>

<ul class="panel_body itemlist">
<li>
<a href="/weed_hz/article/details/26244465" title="USB OTG插入检测识别">USB OTG插入检测识别</a><span>(18197)</span>
</li>
<li>
<a href="/weed_hz/article/details/8949140" title="更改printk打印级别">更改printk打印级别</a><span>(14362)</span>
</li>
<li>
<a href="/weed_hz/article/details/22407575" title="Android启动默认是横屏或者竖屏">Android启动默认是横屏或者竖屏</a><span>(12526)</span>
</li>
<li>
<a href="/weed_hz/article/details/34104497" title="在Eclipse下编译Keil MDK工程">在Eclipse下编译Keil MDK工程</a><span>(7132)</span>
</li>
<li>
<a href="/weed_hz/article/details/8939830" title="YUYV摄像头采集jpeg格式图片">YUYV摄像头采集jpeg格式图片</a><span>(6992)</span>
</li>
<li>
<a href="/weed_hz/article/details/12557291" title="规一化混音算法和alsa混音算法比较">规一化混音算法和alsa混音算法比较</a><span>(6744)</span>
</li>
<li>
<a href="/weed_hz/article/details/21936345" title="linux与window文件目录共享——samba配置及在windows映射">linux与window文件目录共享——samba配置及在windows映射</a><span>(6254)</span>
</li>
<li>
<a href="/weed_hz/article/details/8949370" title="cryptsetup – 分区加密工具">cryptsetup – 分区加密工具</a><span>(5474)</span>
</li>
<li>
<a href="/weed_hz/article/details/9226055" title="理解和使用alsa配置-默认静音,必须先用amixer解除主音量和pcm音量的静音">理解和使用alsa配置-默认静音,必须先用amixer解除主音量和pcm音量的静音</a><span>(5427)</span>
</li>
<li>
<a href="/weed_hz/article/details/8965733" title="linux 内核信号量 用户态信号量 详解">linux 内核信号量 用户态信号量 详解</a><span>(5241)</span>
</li>
</ul>
</div>
<div id="hotarticls2" class="panel">
<ul class="panel_head"><span>评论排行</span></ul>
<ul class="panel_body itemlist">
<li>
<a href="/weed_hz/article/details/12557291" title="规一化混音算法和alsa混音算法比较">规一化混音算法和alsa混音算法比较</a><span>(3)</span>
</li>
<li>
<a href="/weed_hz/article/details/8946355" title="SD卡协议学习点滴（三）">SD卡协议学习点滴（三）</a><span>(2)</span>
</li>
<li>
<a href="/weed_hz/article/details/10232407" title="FLV视频封装格式详解">FLV视频封装格式详解</a><span>(2)</span>
</li>
<li>
<a href="/weed_hz/article/details/17783843" title="VS2010单词高亮插件免费下载">VS2010单词高亮插件免费下载</a><span>(2)</span>
</li>
<li>
<a href="/weed_hz/article/details/8939830" title="YUYV摄像头采集jpeg格式图片">YUYV摄像头采集jpeg格式图片</a><span>(2)</span>
</li>
<li>
<a href="/weed_hz/article/details/8949140" title="更改printk打印级别">更改printk打印级别</a><span>(1)</span>
</li>
<li>
<a href="/weed_hz/article/details/34104497" title="在Eclipse下编译Keil MDK工程">在Eclipse下编译Keil MDK工程</a><span>(1)</span>
</li>
<li>
<a href="/weed_hz/article/details/5704938" title="wince 中文乱码">wince 中文乱码</a><span>(0)</span>
</li>
<li>
<a href="/weed_hz/article/details/5646462" title="上拉电阻。下拉电阻">上拉电阻。下拉电阻</a><span>(0)</span>
</li>
<li>
<a href="/weed_hz/article/details/5627726" title="wince 中文乱码">wince 中文乱码</a><span>(0)</span>
</li>
</ul>
</div>
<div id="homepageArticles" class="panel tracking-ad" data-mod="popu_4">
<ul class="panel_head"><span>推荐文章</span></ul>
<ul class="panel_body" id="ad_commend">
<ul>
<li><a href="http://blog.csdn.net/mmoaay/article/details/54562045" target="_blank">* 造轮子 | 如何设计一个面向协议的 iOS 网络请求库</a></li>
<li><a href="http://blog.csdn.net/guolin_blog/article/details/53122387" 
target="_blank">* Android新特性介绍，ConstraintLayout完全解析</a></li>
<li><a href="http://blog.csdn.net/lmj623565791/article/details/54882693"target="_blank">* Android 热修复 Tinker接入及源码浅析</a></li>
<li><a href="http://blog.csdn.net/zwgdft/article/details/54728677" target="_blank">* 创业公司做数据分析（六）数据仓库的建设</a></li>
<li><a href="http://blog.csdn.net/chenssy/article/details/54883355" 
target="_blank">* 【死磕Java并发】-----深入分析synchronized的实现原理</a></li>


</ul></ul>
</div>


<div id="newcomments" class="panel">
<ul class="panel_head"><span>最新评论</span></ul>
<ul class="panel_body itemlist">
    <li>
   
         <a href="/weed_hz/article/details/10232407#comments">FLV视频封装格式详解</a>
    <p style="margin:0px;"><a href="/xwc_1135" class="user_name">xwc_1135</a>:
好
    </p>
    </li>
    <li>
   
         <a href="/weed_hz/article/details/10232407#comments">FLV视频封装格式详解</a>
    <p style="margin:0px;"><a href="/xwc_1135" class="user_name">xwc_1135</a>:
好
    </p>
    </li>
    <li>
   
         <a href="/weed_hz/article/details/8946355#comments">SD卡协议学习点滴（三）</a>
    <p style="margin:0px;"><a href="/weed_hz" class="user_name">weed_hz</a>:
@jxl_annie: 查一上sd协议
    </p>
    </li>
    <li>
   
         <a href="/weed_hz/article/details/8946355#comments">SD卡协议学习点滴（三）</a>
    <p style="margin:0px;"><a href="/jxl_annie" class="user_name">jxl_annie</a>:
请教一下，在多块写操作前发送的ACMD23指令，等待应答后需要等待吗？等待多久？
    </p>
    </li>
    <li>
   
         <a href="/weed_hz/article/details/12557291#comments">规一化混音算法和alsa混音算法比较</a>
    <p style="margin:0px;"><a href="/qq_33378751" class="user_name">qq_33378751</a>:
那个文件能换成数组吗,我打算用JNI实现,怎么改?
    </p>
    </li>
    <li>
   
         <a href="/weed_hz/article/details/12557291#comments">规一化混音算法和alsa混音算法比较</a>
    <p style="margin:0px;"><a href="/weed_hz" class="user_name">weed_hz</a>:
@yj_780209:我也记不清楚了，两年了都忘了
    </p>
    </li>
    <li>
   
         <a href="/weed_hz/article/details/8939830#comments">YUYV摄像头采集jpeg格式图片</a>
    <p style="margin:0px;"><a href="/code_style" class="user_name">code_style</a>:
他这个rgb转换有问题，自己也不看，而且分辨率超过2000*1900的话，根本跑不起来，数组的方式分...
    </p>
    </li>
    <li>
   
         <a href="/weed_hz/article/details/34104497#comments">在Eclipse下编译Keil MDK工程</a>
    <p style="margin:0px;"><a href="/AAA506394193" class="user_name">AAA506394193</a>:
请问一个为什么我安装的KEIL里面没eclipse文件夹呢，你可以给发一个吗，994966707@q...
    </p>
    </li>
    <li>
   
         <a href="/weed_hz/article/details/17783843#comments">VS2010单词高亮插件免费下载</a>
    <p style="margin:0px;"><a href="/luochen_" class="user_name">luochen_</a>:
非常感谢你的帮助，好东西就改免费分享，愿好运与你常在！南无阿弥陀佛
    </p>
    </li>
    <li>
   
         <a href="/weed_hz/article/details/17783843#comments">YUYV摄像头采集jpeg格式图片</a>
    <p style="margin:0px;"><a href="/dai_xiangjun" class="user_name">dai_xiangjun</a>:
你这个有问题。蓝色和红色是相反的。
    </p>
    </li>
</ul>
</div>
    </div>
    <div class="clear">
    </div>


                 <!-- 广告位开始 --> 
                    <ins data-revive-zoneid="189" data-revive-id="8c38e720de1c90a6f6ff52f3f89c4d57"></ins> 
                <!-- 广告位结束 -->

           </div>   

            <div class="clear">
            </div>
        </div>

        

<script type="text/javascript" src="http://c.csdnimg.cn/rabbit/cnick/cnick.js"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/newblog.min.js"></script>


<script type="text/javascript" src="http://medal.blog.csdn.net/showblogmedal.ashx?blogid=847676"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/JavaScript1.js"></script>

<script type="text/javascript">document.write("<img src=http://counter.csdn.net/pv.aspx?id=24 border=0 width=0 height=0>");</script>
<script type="text/javascript" src="http://www.csdn.net/ui/scripts/Csdn/counter.js"></script>
<script type="text/javascript" src="http://ad.csdn.net/scripts/ad-blog.js"></script>
<script type="text/javascript">
    $(function () {
        function __get_code_toolbar(snippet_id) {
            return $("<span class='tracking-ad' data-mod='popu_167'><a href='https://code.csdn.net/snippets/"
                    + snippet_id
                    + "' target='_blank' title='在CODE上查看代码片'  style='text-indent:0;'><img src='https://code.csdn.net/assets/CODE_ico.png' width=12 height=12 alt='在CODE上查看代码片' style='position:relative;top:1px;left:2px;'/></a></span>"
                    + "<span class='tracking-ad' data-mod='popu_170'><a href='https://code.csdn.net/snippets/"
                    + snippet_id
                    + "/fork' target='_blank' title='派生到我的代码片' style='text-indent:0;'><img src='https://code.csdn.net/assets/ico_fork.svg' width=12 height=12 alt='派生到我的代码片' style='position:relative;top:2px;left:2px;'/></a></span>");
        }
        
        $("[code_snippet_id]").each(function () {
            __s_id = $(this).attr("code_snippet_id");
            if (__s_id != null && __s_id != "" && __s_id != 0 && parseInt(__s_id) > 70020) {
                __code_tool = __get_code_toolbar(__s_id);
                $(this).prev().find(".tools").append(__code_tool);
            }
        });

        $(".bar").show();
    });
</script>





    </div>
      <!--new top-->
    
    <script id="csdn-toolbar-id" btnId="header_notice_num" wrapId="note1" count="5" subCount="5" type="text/javascript" src="http://c.csdnimg.cn/public/common/toolbar/js/toolbar.js"></script>     <!--new top-->
   
    <link href="http://c.csdnimg.cn/comm_ask/css/ask_float_block.css" type="text/css" rel="stylesheet" />
    <script language='JavaScript' type='text/javascript' src='http://c.csdnimg.cn/comm_ask/js/libs/wmd.js'></script>
    <script language='JavaScript' type='text/javascript' src='http://c.csdnimg.cn/comm_ask/js/libs/showdown.js'></script>
    <script language='JavaScript' type='text/javascript' src='http://c.csdnimg.cn/comm_ask/js/libs/prettify.js'></script>
    <script language='JavaScript' type='text/javascript' src='http://c.csdnimg.cn/comm_ask/js/apps/ask_float_block.js'></script>
   

   

  <div id="a52b5334d" style="width: 1px; height: 1px; display: none;">
                    <script id="adJs52b5334"></script>
                    <script>document.getElementById("adJs52b5334").src = "http://ads.csdn.net/js/opt/52b5334.js?t=" + Math.random();</script>
   </div>

    <link rel="stylesheet" href="http://static.blog.csdn.net/css/blog_code.css" />
    <script type="text/javascript" src="http://static.blog.csdn.net/scripts/saveToCode.js"></script>
      <script type="text/javascript" src="//csdnimg.cn/rabbit/tracking-ad/main.js?75eacd8"></script>

     <link rel="stylesheet" href="http://static.blog.csdn.net/css/fa.css" />

    <div class="pop_CA_cover"  style="display:none"></div>
    <div class="pop pop_CA"  style="display:none">
          <div class="CA_header">
            收藏助手
            <span class="cancel_icon"  id="fapancle"  onclick="$('.pop_CA').hide();$('.pop_CA_cover').hide();"></span>
          </div>
          <iframe src="" id="fa" frameborder="0" width="100%" height="360"  scrolling="no" />
    </div>
</body>
</html>   
 